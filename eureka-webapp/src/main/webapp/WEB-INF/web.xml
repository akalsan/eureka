<?xml version="1.0" encoding="UTF-8"?>
<!-- This web.xml file is not required when using Servlet 3.0 container, 
     see implementation details http://jersey.java.net/nonav/documentation/latest/jax-rs.html#d4e194 -->
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.5" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<!-- THIS LISTENER CONFIGURES THE GUICE INJECTION -->
	<!-- 
	<listener>
		<listener-class>edu.emory.cci.aiw.cvrg.sample.config.SampleListener</listener-class>
	</listener>

		UNCOMMENT THE FOLLOWING (AND COMMENT OUT GUICE RELATED LISTENER AND FILTERS, 
		IF YOU WANT TO USE JUST JERSEY, WITHOUT GUICE
	-->

	<!-- Enable the CAS Single Sign Out feature -->
	<listener>
		<listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
	</listener>
	<context-param>
		<param-name>eureka-services-url</param-name>
		<param-value>https://eureka.cci.emory.edu:8080/eureka-services</param-value>
	</context-param>
	<!--
	<servlet>
		<servlet-name>Jersey Web Application</servlet-name>
		<servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>
		<init-param>
			<param-name>com.sun.jersey.config.property.packages</param-name>
			<param-value>edu.emory.cci.cvrg.middleware.resource</param-value>
		</init-param>
		<init-param>
			<param-name>com.sun.jersey.spi.container.ResourceFilters</param-name>
			<param-value>com.sun.jersey.api.container.filter.RolesAllowedResourceFilterFactory</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>Jersey Web Application</servlet-name>
		<url-pattern>/api/*</url-pattern>
	</servlet-mapping>
	-->
	
	<servlet>
		<servlet-name>CommonsFileUploadServlet</servlet-name>
		<servlet-class>edu.emory.cci.aiw.cvrg.eureka.servlet.CommonsFileUploadServlet</servlet-class>
		<init-param>
			<param-name>dest_dir</param-name>
			<param-value>uploads</param-value>
		</init-param>
	</servlet>	
	<servlet>
		<servlet-name>Login</servlet-name>
		<servlet-class>edu.emory.cci.aiw.cvrg.eureka.servlet.LoginServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet>
		<servlet-name>Logout</servlet-name>
		<servlet-class>edu.emory.cci.aiw.cvrg.eureka.servlet.LogoutServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet>
		<servlet-name>RegisterUser</servlet-name>
		<servlet-class>edu.emory.cci.aiw.cvrg.eureka.servlet.RegisterUserServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet>
		<servlet-name>JobList</servlet-name>
		<servlet-class>edu.emory.cci.aiw.cvrg.eureka.servlet.JobListServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet>
		<servlet-name>JobPoll</servlet-name>
		<servlet-class>edu.emory.cci.aiw.cvrg.eureka.servlet.JobPollServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet>
		<servlet-name>AdminManagerServlet</servlet-name>
		<servlet-class>edu.emory.cci.aiw.cvrg.eureka.servlet.AdminManagerServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet>
		<servlet-name>UserAcctManagerServlet</servlet-name>
		<servlet-class>edu.emory.cci.aiw.cvrg.eureka.servlet.UserAcctManagerServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	

	<servlet-mapping>
		<servlet-name>CommonsFileUploadServlet</servlet-name>
		<url-pattern>/upload</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>Login</servlet-name>
		<url-pattern>/protected/login</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>Logout</servlet-name>
		<url-pattern>/logout</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>RegisterUser</servlet-name>
		<url-pattern>/register</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>JobPoll</servlet-name>
		<url-pattern>/jobpoll</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>JobList</servlet-name>
		<url-pattern>/protected/jobs</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>AdminManagerServlet</servlet-name>
		<url-pattern>/protected/admin</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>UserAcctManagerServlet</servlet-name>
		<url-pattern>/protected/user_acct</url-pattern>
	</servlet-mapping>
	

	<!-- UNCOMMENT THESE FILTERS AND THEIR MAPPINGS TO ENABLE AUTHENTICATION VIA CAS -->
	<filter>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
	</filter>
	<filter>
		<filter-name>CAS Authentication Filter</filter-name>
		<filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
		<init-param>
			<param-name>casServerLoginUrl</param-name>
			<param-value>https://eureka.cci.emory.edu/cas/login</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>https://eureka.cci.emory.edu</param-value>
		</init-param>
		<init-param>
			<param-name>renew</param-name>
			<param-value>false</param-value>
		</init-param>
		<init-param>
			<param-name>gateway</param-name>
			<param-value>false</param-value>
		</init-param>
	</filter>
	<filter>
		<filter-name>CAS Proxy Filter</filter-name>
		<filter-class>org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>
		<init-param>
			<param-name>acceptAnyProxy</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>proxyCallbackUrl</param-name>
			<param-value>https://eureka.cci.emory.edu/eureka-webapp/proxyCallback</param-value>
		</init-param>
		<init-param>
			<param-name>proxyReceptorUrl</param-name>
			<param-value>/eureka-webapp/proxyCallback</param-value>
		</init-param>
		<init-param>
			<param-name>casServerUrlPrefix</param-name>
			<param-value>https://eureka.cci.emory.edu/cas/</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>https://eureka.cci.emory.edu</param-value>
		</init-param>
		<init-param>
			<param-name>redirectAfterValidation</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>
		<init-param>
			<param-name>roleAttribute</param-name>
			<param-value>authorities</param-value>
		</init-param>
	</filter>
	<filter>
		<filter-name>CAS Assertion Thread Local Filter</filter-name>
		<filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>
	</filter>

    <filter>
        <filter-name>Roles Filter</filter-name>
        <filter-class>edu.emory.cci.aiw.cvrg.eureka.common.filter.RolesFilter</filter-class>
        <init-param>
            <!-- Which data source to use for querying role information -->
            <param-name>datasource</param-name>
            <param-value>java:comp/env/jdbc/EurekaService</param-value>
        </init-param>
        <init-param>
            <!-- The SQL used to fetch role information, the ? will be replaced with the Principal's name, using a preparedstatement.setString(1, xxx) -->
            <param-name>sql</param-name>
            <param-value>select a.name as role from roles a, user_role b, users c where a.id=b.roleid and b.userid=c.id and c.email=?</param-value>
        </init-param>
        <init-param>
            <!-- Column name in the result set that should be used to get role names -->
            <param-name>rolecolumn</param-name>
            <param-value>role</param-value>
        </init-param>
    </filter>
	<filter-mapping>
		<filter-name>Roles Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!--

	<filter>
		<filter-name>Guice Filter</filter-name>
		<filter-class>com.google.inject.servlet.GuiceFilter</filter-class>
	</filter>
	-->

	<!-- UNCOMMENT FILTER MAPPINGS TO ACTIVATE AUTHENTICATION VIA CAS -->
	 
	<filter-mapping>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CAS Proxy Filter</filter-name>
		<url-pattern>/proxyCallback</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CAS Proxy Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CAS Authentication Filter</filter-name>
		<url-pattern>/protected/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CAS Assertion Thread Local Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
	<!--
	<filter-mapping>
		<filter-name>Guice Filter</filter-name>
		<url-pattern>/api/*</url-pattern>
	</filter-mapping>
	-->
</web-app>
